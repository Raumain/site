/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AProposRouteImport } from './routes/a-propos'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjetsIndexRouteImport } from './routes/projets/index'
import { Route as ProjetsIdRouteImport } from './routes/projets/$id'

const AProposRoute = AProposRouteImport.update({
  id: '/a-propos',
  path: '/a-propos',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjetsIndexRoute = ProjetsIndexRouteImport.update({
  id: '/projets/',
  path: '/projets/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjetsIdRoute = ProjetsIdRouteImport.update({
  id: '/projets/$id',
  path: '/projets/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/a-propos': typeof AProposRoute
  '/projets/$id': typeof ProjetsIdRoute
  '/projets': typeof ProjetsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/a-propos': typeof AProposRoute
  '/projets/$id': typeof ProjetsIdRoute
  '/projets': typeof ProjetsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/a-propos': typeof AProposRoute
  '/projets/$id': typeof ProjetsIdRoute
  '/projets/': typeof ProjetsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/a-propos' | '/projets/$id' | '/projets'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/a-propos' | '/projets/$id' | '/projets'
  id: '__root__' | '/' | '/a-propos' | '/projets/$id' | '/projets/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AProposRoute: typeof AProposRoute
  ProjetsIdRoute: typeof ProjetsIdRoute
  ProjetsIndexRoute: typeof ProjetsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/a-propos': {
      id: '/a-propos'
      path: '/a-propos'
      fullPath: '/a-propos'
      preLoaderRoute: typeof AProposRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projets/': {
      id: '/projets/'
      path: '/projets'
      fullPath: '/projets'
      preLoaderRoute: typeof ProjetsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projets/$id': {
      id: '/projets/$id'
      path: '/projets/$id'
      fullPath: '/projets/$id'
      preLoaderRoute: typeof ProjetsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AProposRoute: AProposRoute,
  ProjetsIdRoute: ProjetsIdRoute,
  ProjetsIndexRoute: ProjetsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
